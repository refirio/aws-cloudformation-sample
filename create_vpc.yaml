AWSTemplateFormatVersion: "2010-09-09"
Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      Tags:
      - Key: "Name"
        Value: "Sample"
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
      - Key: "Name"
        Value: "Sample-InternetGateway"
  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    DependsOn: "AttachGateway"
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: "Name"
        Value: "Sample-PublicRoute"
  PublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: "AttachGateway"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway
  PublicSubnet1:
    Type: "AWS::EC2::Subnet"
    DependsOn: "AttachGateway"
    Properties:
      CidrBlock: "10.0.0.0/24"
      AvailabilityZone: "ap-northeast-1a"
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: "Name"
        Value: "Sample-Public-A"
  PublicSubnet1RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet2:
    Type: "AWS::EC2::Subnet"
    DependsOn: "AttachGateway"
    Properties:
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone: "ap-northeast-1c"
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: "Name"
        Value: "Sample-Public-C"
  PublicSubnet2RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
  ProtectedSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "10.0.2.0/24"
      AvailabilityZone: "ap-northeast-1a"
      VpcId: !Ref VPC
      Tags:
      - Key: "Name"
        Value: "Sample-Protected-A"
  ProtectedSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "10.0.3.0/24"
      AvailabilityZone: "ap-northeast-1c"
      VpcId: !Ref VPC
      Tags:
      - Key: "Name"
        Value: "Sample-Protected-C"
  DBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: "Subnet for RDS"
      DBSubnetGroupName: "sample"
      SubnetIds:
        - !Ref ProtectedSubnet1
        - !Ref ProtectedSubnet2
      Tags:
      - Key: "Name"
        Value: "Sample-DB"
  SSHSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow ssh to client host"
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        FromPort: 22
        ToPort: 22
        CidrIp: "0.0.0.0/0"
      - IpProtocol: "tcp"
        FromPort: 10022
        ToPort: 10022
        CidrIp: "0.0.0.0/0"
      SecurityGroupEgress:
      - IpProtocol: -1
        CidrIp: "0.0.0.0/0"
      Tags:
      - Key: "Name"
        Value: "Sample-SSH"
  WebSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow http to client host"
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: "tcp"
        FromPort: 80
        ToPort: 80
        CidrIp: "0.0.0.0/0"
      - IpProtocol: "tcp"
        FromPort: 443
        ToPort: 443
        CidrIp: "0.0.0.0/0"
      SecurityGroupEgress:
      - IpProtocol: -1
        CidrIp: "0.0.0.0/0"
      Tags:
      - Key: "Name"
        Value: "Sample-Web"
